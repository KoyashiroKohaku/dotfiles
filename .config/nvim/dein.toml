# dein.toml

[[plugins]]
repo = 'Shougo/dein.vim'

# colorscheme {{
[[plugins]]
repo = 'cocopon/iceberg.vim'

[[plugins]]
repo = 'joshdick/onedark.vim'
# }}

# surround {{
[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tpope/vim-repeat'
# }}

# statusline {{
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {
  \ 'active': {
  \   'left': [
  \     [ 'mode', 'paste' ],
  \     [ 'gitbranch', 'readonly', 'filename', 'modified' ]
  \   ],
  \   'right': [
  \     [ 'lineinfo' ],
  \     [ 'percent' ],
  \     [ 'fileformat', 'fileencoding', 'myfiletype' ],
  \     [ 'coc' ],
  \   ],
  \ },
  \ 'component_function': {
  \   'gitbranch': 'MyFugitive',
  \   'myfiletype': 'MyFileType',
  \   'coc': 'MyCocStatus',
  \ },
  \ 'separator': { 'left': "\ue0b0", 'right': "\ue0b2" },
  \ 'subseparator': { 'left': "\ue0b1", 'right': "\ue0b3" }
  \ }

function! MyFugitive()
  try
    let fugitive_head = FugitiveHead()
    return strlen(fugitive_head) ? "\ue0a0 " . fugitive_head : ''
  catch
    return ''
  endtry
endfunction

function! MyFileType()
  try
    return winwidth(0) > 70 ? (strlen(&filetype) ? WebDevIconsGetFileTypeSymbol() . ' ' . &filetype : 'no ft') : ''
  catch
    return winwidth(0) > 70 ? (strlen(&filetype) &filetype : 'no ft') : ''
  endtry
endfunction

function! MyCocStatus()
  try
    return coc#status()
  catch
    return ''
  endtry
endfunction
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'
# }}

# japanese help
[[plugins]]
repo = 'vim-jp/vimdoc-ja'

# indent guides
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
let g:indent_guides_enable_on_vim_startup = 1
'''

# trailing whitespace characters
[[plugins]]
repo = 'ntpeters/vim-better-whitespace'

# increment dates, times, and more
[[plugins]]
repo = 'tpope/vim-speeddating'
hook_add = '''
autocmd MyAutoCmd VimEnter * SpeedDatingFormat %Y/%m/%d
'''

# auto parirs
[[plugins]]
repo = 'jiangmiao/auto-pairs'

# EditorConfig
[[plugins]]
repo = 'editorconfig/editorconfig-vim'
hook_add = '''
let g:EditorConfig_exclude_patterns = [ 'fugitive://.*' ]
'''

# git {{
[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
set signcolumn=yes
'''

[[plugins]]
repo = 'kristijanhusak/defx-git'
# }}

# fzf {{
[[plugins]]
repo = 'junegunn/fzf'
merged = 0

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = ['fzf']
hook_add = '''
nnoremap <Leader>f :<C-u>GFiles<CR>
nnoremap <Leader>g :<C-u>Rg<CR>
nnoremap <Leader>b :<C-u>Buffers<CR>

command! -bang -nargs=* Rg
  \ call fzf#vim#grep(
  \   "rg --column --line-number --no-heading --color=always --smart-case --hidden -- ".shellescape(<q-args>),
  \   1,
  \   fzf#vim#with_preview(),
  \   <bang>0)
'''
# }}

# terminal integration {{
[[plugins]]
repo = 'kassio/neoterm'
hook_add = '''
let g:neoterm_default_mod='belowright'
let g:neoterm_size=10
let g:neoterm_autoinsert = 1
let g:neoterm_autoscroll=1
nnoremap <silent> <C-t> :Ttoggle<CR>
tnoremap <silent> <C-t> <C-\><C-n>:Ttoggle<CR>
'''
# }}

# syntax {{
[[plugins]]
repo = 'sheerun/vim-polyglot'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'elzr/vim-json'

[[plugins]]
repo = 'oblitum/rainbow'
hook_add = '''
let g:rainbow_active = 1
'''
# }}

# lsp
[[plugins]]
repo = 'neoclide/coc.nvim'
trusted = 1
merged = 0
rev = 'release'
if = 'executable("node") && executable("npm") && executable("yarn")'
hook_add = '''
source $XDG_CONFIG_HOME/nvim/rc/coc.rc.vim
'''
