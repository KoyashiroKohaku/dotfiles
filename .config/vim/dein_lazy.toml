# dein_lazy.toml

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = 'InsertCharPre'
on_ft = 'snippet'
hook_source = '''
   " Plugin key-m"appings.
   " Note: It must be "imap" and "smap".  It uses <Plug> mappings.
   imap <C-k>     <Plug>(neosnippet_expand_or_jump)
   smap <C-k>     <Plug>(neosnippet_expand_or_jump)
   xmap <C-k>     <Plug>(neosnippet_expand_target)

   " For conceal markers.
   if has('conceal')
       set conceallevel=2 concealcursor=niv
   endif
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = 'InsertEnter'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#lauto_complete_delay = 0
  inoremap <expr><Tab> pumvisible() ? "\<DOWN>" : "\<Tab>"
  inoremap <expr><S-Tab> pumvisible() ? "\<UP>" : "\<S-Tab>"
'''

[[plugins]]
repo = 'lighttiger2505/deoplete-vim-lsp'
depends = ['deoplete.nvim']
on_event = 'InsertEnter'

[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_add = '''
nmap <silent> <Leader>df :<C-u> Denite file/rec <CR>
nmap <silent> <Leader>dg :<C-u> Denite grep <CR>
nmap <silent> <Leader>db :<C-u> Denite buffer <CR>
nmap <silent> <Leader>dr :<C-u> Denite register <CR>
nmap <silent> <Leader>dl :<C-u> Denite line <CR>
'''
hook_post_source = '''
autocmd FileType denite call s:denite_my_settings()
function! s:denite_my_settings() abort
  nnoremap <silent><buffer><expr> <CR>
    \ denite#do_map('do_action')
  nnoremap <silent><buffer><expr> d
    \ denite#do_map('do_action', 'delete')
  nnoremap <silent><buffer><expr> p
    \ denite#do_map('do_action', 'preview')
  nnoremap <silent><buffer><expr> q
    \ denite#do_map('quit')
  nnoremap <silent><buffer><expr> i
    \ denite#do_map('open_filter_buffer')
  nnoremap <silent><buffer><expr> <Space>
    \ denite#do_map('toggle_select').'j'
endfunction

let s:denite_win_width_percent = 0.85
let s:denite_win_height_percent = 0.7

call denite#custom#option('default', {
  \ 'split': 'floating',
  \ 'winwidth': float2nr(&columns * s:denite_win_width_percent),
  \ 'wincol': float2nr((&columns - (&columns * s:denite_win_width_percent)) / 2),
  \ 'winheight': float2nr(&lines * s:denite_win_height_percent),
  \ 'winrow': float2nr((&lines - (&lines * s:denite_win_height_percent)) / 2),
  \ })
'''

[[plugins]]
repo = 'Shougo/defx.nvim'
depends = [
  'vim-devicons',
  'defx-icons',
  'defx-git',
]
hook_add = '''
  nnoremap <silent> <Leader>f :<C-u> Defx <CR>
'''
hook_post_source = '''
  source $XDG_CONFIG_HOME/vim/rc/plugins/defx.rc.vim
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'kristijanhusak/defx-icons'

[[plugins]]
repo = 'kristijanhusak/defx-git'

[[plugins]]
repo = 'markonm/traces.vim'
on_event = 'CmdwinEnter'

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'

[[plugins]]
repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'

[[plugins]]
repo = 'tpope/vim-markdown'
on_ft = 'markdown'

[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
on_ft = 'markdown'
build = 'cd app & yarn install'
